function d = dlPowerSpectrumKLD(dlObj, opts)

    dlPotentialIndices = endsWith(dlObj.dlVariables, opts.id);
    dlPotentials = dlObj.dlOutputs(dlPotentialIndices);
    dlQ = opts.target;

    dlFs = floor(1000/(dlObj.dldT * dlObj.dlDownSampleFactor));    
    dlLf = 1 + (opts.lf / dlFs)*L;
    dlHf = opts.hf / dlFs

    n = size(dlPotentials, 2);
    x = dlPotentials{1, 1};
    L = size(x, 1);
    Lnq = floor(L/2);

    y = zeros(n, Lnq);
            
    for k = 1:n
        
        x = dlPotentials{1, k};
        N = size(x, 2);
        x = mean(x, 2);

        x = detrend(x);
        Y = fft(x);

        P2 = abs(Y/L);
        P1 = P2(1:Lnq);
        P1 = smooth(P1, min(N, ceil(L^0.5)));

        y(k, :) = P1*N;
        
    end
    
    dlP = mean(y, 1);
    dlP = dlP / sum(dlP);
    dlQ = dlQ / sum(dlQ);

    d = dlP .* log(dlP ./ dlQ);
    d(isnan(d) | isinf(d)) = 0;
    d = mean(d);

end

